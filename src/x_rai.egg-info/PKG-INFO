Metadata-Version: 2.1
Name: x-rai
Version: 0.0.1
Summary: **XRAI (eXplanable Regression-based Artificial Intelligence)** is a package for the integration of regression-based machine-learning and eXplainable AI via the SHAP-package.
Author-email: Christopher Lalk <clalk@example.com>
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Psychology Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: Development Status :: Ongoing
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: featurewiz@ git+https://github.com/AutoViML/featurewiz.git@2fab4170382b698114935f7b0842f36ebcaa51c0
Requires-Dist: gpboost==1.5.3
Requires-Dist: matplotlib==3.9.2
Requires-Dist: merf==1.0
Requires-Dist: numpy==2.0.2
Requires-Dist: openpyxl==3.1.5
Requires-Dist: pandas==2.2.3
Requires-Dist: scikit-learn==1.5.2
Requires-Dist: scipy==1.14.1
Requires-Dist: shap==0.46.0
Requires-Dist: statistics==1.0.3.5
Requires-Dist: xgboost==1.7.6
Requires-Dist: XlsxWriter==3.2.0
Provides-Extra: dev
Requires-Dist: numpy; extra == "dev"
Requires-Dist: scikit-learn; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: hypothesis; extra == "test"

## Project descriptions
**XRAI (eXplanable Regression-based Artificial Intelligence)** is a package for the integration of regression-based machine-learning and eXplainable AI via the SHAP-package. XRAI allows the prediction of a target variable via several ML algorithms from scikit-learn (Lasso, Elastic Net, Random Forest, Support Vector Regression, XGBoost, and a Support Vector Regression meta-learner). Algorithm selection is conducted via nested cross-validation.

Specifications can be selected regarding the internal and external folds, the selected algorithms and the use of feature selection via featureWiz. The cross-validation scheme can be safed for reproductibility. SHAP allows the estimation of feature importance both for individual predictions, as well as across the whole dataset.   

